Git y github
Stagin

Area en memoria ram, completamente aislada, funciona en memoria ram y es donde al principio se guardarán los cambios y se crea el repositorio, una vez se hacen los cambios en el archivo se envía al stagin con el comando git add

TRABAJANDO CON UN REPO LOCAL
	
git init → iniciando el entorno github
git add → Agrega los cambios al stagin para trackearlo
git commit -m mensaje → enviar al repositorio los cambios almacenados en sagin, cada commit es una nueva versión de cambios del archivo hacia el repositorio
git checkout → traer los cambios desde el repositorio hacia la carpeta 
git status --> ver el estado de mis archivos
git rm --force --> Elimina los archivos de Git y del disco duro
git rm --cached --> remover un archivo del staging y del proximo commit pero los mantiene en disco duro  
git config --> configurar git 
git config --list --> las configuraciones que tiene y las cosas que le faltan
git log --> ver el historial de cambios recibe el nombre de archivo como parametro
git show --> muestra una serie de cambios realizados al archivo, parametro (nombre del archivo)
git checkout # --> me muestra la versión que to le indique en el # de versión

RAMAS
git branch --> ver las ramas existentes
git branch nameBranch --> crear rama, parametro nombre
git merge --> fusionar las ramas 

TRABAJANDO CON UN REPO REMETO

git clone url --> Se trae una copia del master a mi carpeta y crea la base de todos los cambios historicos en el repositorio local
git push -->  envia los cambios y los archivos guardados en el repositorio local al repositorio remoto
git fetch --> Trae los cambios del repositorio remoto al repositorio local pero no lo copia en los archivos, para que eso pase debo fusionar la version del repositorio local con el directorio de trabajo, a eso se le llama un merge
git pull --> Trae los cambios del repositorio remoto al repositorio locar y al directorio de trabajo

Branch o Ramas
Dividir el archivo en secciones o ramas, a cada seccion se le llama rama y va a tener un nombre, la rama principal por defecto es master.

Hotfix: nombre en la industria de la rama de arreglo en caliente, crear una nueva rama para arreglar un bug
Development: Nombre en la industria de la rama de pruebas 
Merge: Unir los cambios de una rama con otra

Esto es la rama future:
Aqui se pueden hacer nuevos cambios si alterar la rama master, luego a estos cambios les puedo hacer un merge para fusionarlos con la rama master
